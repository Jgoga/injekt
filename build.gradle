import org.gradle.plugins.ide.idea.model.IdeaModel
import org.gradle.plugins.ide.idea.model.IdeaProject

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
    }
    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:0.12.1218"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath "com.prezi.pride:gradle-pride-plugin:0.11"
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        // one day... classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.1-SNAPSHOT"
    }
}

subprojects {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'pride'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
        options.compilerArgs << '-Xlint:unchecked'
    }

    IdeaModel idea = project.idea
    IdeaProject ideaProject = idea.getProject()

    if (ideaProject != null) {
        ideaProject.setJdkName(project.targetCompatibility.getName())
        ideaProject.setLanguageLevel(project.sourceCompatibility.getName())
        if (ideaProject.hasProperty("vcs")) {
            ideaProject.setVcs('Git')
        }
    }

    idea.module {
        downloadJavadoc = true
        downloadSources = true
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        provided "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"

        testCompile "junit:junit:$version_junit"
    }

    //noinspection GroovyAssignabilityCheck
    configurations.all {
        // kill all logging anything else might bring in, all of our projects use slf4j if any
        exclude group: "org.slf4j", module: "slf4j-simple"
        exclude group: "commons-logging"
        exclude group: "log4j"
        exclude group: "com.google.code.findbugs"
        exclude group: "org.slf4j", module: "slf4j-log4j12"

        resolutionStrategy {
            cacheDynamicVersionsFor 12, 'hours'  // things with wildcard version numbers
            cacheChangingModulesFor 0, 'hours'
            // things with same version, but content of module changes, i.e. SNAPSHOT
        }

    }
}

if (rootProject != project) {
    // if we are not the root project, we must have prezi-pride in a level above, configure it to be able to generate IDE projects
    configure(rootProject) {
        apply plugin: 'idea'
    }
}


subprojects {
    apply plugin: 'com.bmuschko.nexus'

    task jars() {
        dependsOn build
    }

    task subRelease() {
        dependsOn jars, uploadArchives
    }

    modifyPom {
        project {
            name 'Injekt for Kotlin'
            description 'Dependency injection library for Kotlin.'
            url 'https://github.com/kohesive/injekt'
            inceptionYear '2015'

            scm {
                url 'https://github.com/kohesive/injekt'
                connection 'scm:https://github.com/kohesive/injekt'
                developerConnection 'scm:git@github.com:kohesive/injekt.git'
            }

            licenses {
                license {
                    name 'MIT'
                    url 'https://github.com/kohesive/injekt/blob/master/LICENSE'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'apatrida'
                    name 'Jayson Minard'
                    email 'jayson.minard@gmail.com'
                }
            }
        }
    }

    nexus {
        sign = false
        repositoryUrl = "file://${buildDir.canonicalPath}/repo"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "$version_gradle"
}

task jars() {
    dependsOn subprojects.jars
}

task release() {
    dependsOn subprojects.subRelease
}

defaultTasks 'clean', 'jars'